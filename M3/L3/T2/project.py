'''
Етап «Правила гри»
Використовуй команду print (), щоб привітатися з гравцем і пояснити йому правила гри.

Етап «Питання-відповідь»: генерація задуманого числа
Нехай програма загадає число. Для цього підключи модуль random і використовуй команду randint (a, b), де a і b - межі, в яких потрібно видати випадкове число.

Етап «Питання-відповідь»: введення числа користувачем
Запросіть у користувача його варіант відповіді за допомогою команди input ().

Етап «Питання-відповідь»: підказки
Порівняте за допомогою умовного оператора введене користувачем число з задуманим. Якщо вони не збігаються, виведи підказку, більше загадане число або менше введеного варіанти відповіді.

Етап «Питання-відповідь»: повтор введення
Додате в програму цикл, щоб користувач міг повторно вводити варіант відповіді, поки не відгадає.

Етап «Результат гри»
Привітай користувача з перемогою і виведи на екран загадане число.

Бонус: додате в програму підрахунок спроб!
'''

import random

def welcome():
    print("Ласкаво просимо до гри!")
    print("Я загадаю число від 1 до 100. Спробуйте вгадати його!")

def generate_random_number():
    return random.randint(1, 100)

def get_user_guess():
    return int(input("Введіть ваш варіант відповіді: "))

def provide_hint(secret_number, user_guess):
    if user_guess < secret_number:
        print("Більше! Спробуйте ще.")
    elif user_guess > secret_number:
        print("Менше! Спробуйте ще.")
    else:
        print("Вірно! Ви вгадали число!")

def play_game():
    secret_number = generate_random_number()
    attempts = 0

    while True:
        user_guess = get_user_guess()
        attempts += 1

        if user_guess == secret_number:
            print(f"Вітаю! Ви вгадали число {secret_number} за {attempts} спроб.")
            break
        else:
            provide_hint(secret_number, user_guess)

if __name__ == "__main__":
    welcome()
    play_game()

